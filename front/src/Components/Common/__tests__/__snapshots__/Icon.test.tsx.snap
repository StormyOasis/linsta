// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Exported styled icons renders HeartSVG and UpSVG with correct <use> href 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg
        aria-hidden="true"
        class="Icon-sc-btq2kp-0"
        data-testid="heart-svg"
        fill="none"
        focusable="false"
        name="heart"
        stroke="currentColor"
        stroke-width="2"
      >
        <use
          href="/sprite.svg#heart"
        />
      </svg>
      <svg
        aria-hidden="true"
        class="Icon-sc-btq2kp-0"
        data-testid="up-svg"
        fill="none"
        focusable="false"
        name="up-line"
        stroke="currentColor"
        stroke-width="2"
      >
        <use
          href="/sprite.svg#up-line"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg
      aria-hidden="true"
      class="Icon-sc-btq2kp-0"
      data-testid="heart-svg"
      fill="none"
      focusable="false"
      name="heart"
      stroke="currentColor"
      stroke-width="2"
    >
      <use
        href="/sprite.svg#heart"
      />
    </svg>
    <svg
      aria-hidden="true"
      class="Icon-sc-btq2kp-0"
      data-testid="up-svg"
      fill="none"
      focusable="false"
      name="up-line"
      stroke="currentColor"
      stroke-width="2"
    >
      <use
        href="/sprite.svg#up-line"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Exported styled icons renders SearchSVG with correct <use> href 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg
        aria-hidden="true"
        class="Icon-sc-btq2kp-0"
        data-testid="search-svg"
        fill="none"
        focusable="false"
        name="search-icon"
        stroke="currentColor"
        stroke-width="2"
      >
        <use
          href="/sprite.svg#search-icon"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg
      aria-hidden="true"
      class="Icon-sc-btq2kp-0"
      data-testid="search-svg"
      fill="none"
      focusable="false"
      name="search-icon"
      stroke="currentColor"
      stroke-width="2"
    >
      <use
        href="/sprite.svg#search-icon"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Icon component renders an svg with correct props and <use> href 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg
        aria-hidden="true"
        data-testid="icon"
        fill="red"
        focusable="false"
        height="32"
        name="test-icon"
        stroke="blue"
        stroke-width="3"
        width="32"
      >
        <use
          href="/sprite.svg#test-icon"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg
      aria-hidden="true"
      data-testid="icon"
      fill="red"
      focusable="false"
      height="32"
      name="test-icon"
      stroke="blue"
      stroke-width="3"
      width="32"
    >
      <use
        href="/sprite.svg#test-icon"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`Icon component renders with default fill, stroke, and strokeWidth if not provided 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg
        aria-hidden="true"
        data-testid="icon-default"
        fill="none"
        focusable="false"
        name="default-icon"
        stroke="currentColor"
        stroke-width="2"
      >
        <use
          href="/sprite.svg#default-icon"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg
      aria-hidden="true"
      data-testid="icon-default"
      fill="none"
      focusable="false"
      name="default-icon"
      stroke="currentColor"
      stroke-width="2"
    >
      <use
        href="/sprite.svg#default-icon"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`makeStyledIcon returns a styled component that renders Icon with fixed name 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <svg
        aria-hidden="true"
        class="Icon-sc-btq2kp-0"
        data-testid="custom-icon"
        fill="none"
        focusable="false"
        name="custom-icon"
        stroke="currentColor"
        stroke-width="2"
      >
        <use
          href="/sprite.svg#custom-icon"
        />
      </svg>
    </div>
  </body>,
  "container": <div>
    <svg
      aria-hidden="true"
      class="Icon-sc-btq2kp-0"
      data-testid="custom-icon"
      fill="none"
      focusable="false"
      name="custom-icon"
      stroke="currentColor"
      stroke-width="2"
    >
      <use
        href="/sprite.svg#custom-icon"
      />
    </svg>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;
