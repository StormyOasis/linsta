// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`CreatePostModal calls onClose after successful submit 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        data-testid="mock-theme"
      >
        <div
          data-testid="mock-multistepmodal"
        >
          <div
            collabdata="[object Object]"
            data-testid="mock-final"
            editdata="[object Object]"
            element="[object Object]"
            locationtext=""
            options="[object Object]"
            title="Create Post"
          >
            <button
              data-testid="mock-final-submit"
            >
              Submit
            </button>
          </div>
          <button
            data-testid="mock-next"
          >
            Next
          </button>
          <button
            data-testid="mock-prev"
          >
            Prev
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      data-testid="mock-theme"
    >
      <div
        data-testid="mock-multistepmodal"
      >
        <div
          collabdata="[object Object]"
          data-testid="mock-final"
          editdata="[object Object]"
          element="[object Object]"
          locationtext=""
          options="[object Object]"
          title="Create Post"
        >
          <button
            data-testid="mock-final-submit"
          >
            Submit
          </button>
        </div>
        <button
          data-testid="mock-next"
        >
          Next
        </button>
        <button
          data-testid="mock-prev"
        >
          Prev
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`CreatePostModal goes to crop step when files are set 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        data-testid="mock-theme"
      >
        <div
          data-testid="mock-multistepmodal"
        >
          <div
            data-testid="mock-edit"
            editdata="[object Object]"
            element="[object Object]"
            options="[object Object]"
            title="Edit"
          />
          <button
            data-testid="mock-next"
          >
            Next
          </button>
          <button
            data-testid="mock-prev"
          >
            Prev
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      data-testid="mock-theme"
    >
      <div
        data-testid="mock-multistepmodal"
      >
        <div
          data-testid="mock-edit"
          editdata="[object Object]"
          element="[object Object]"
          options="[object Object]"
          title="Edit"
        />
        <button
          data-testid="mock-next"
        >
          Next
        </button>
        <button
          data-testid="mock-prev"
        >
          Prev
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`CreatePostModal handles lexical text change in final step 1`] = `
{
  "asFragment": [Function],
  "baseElement": <body>
    <div>
      <div
        data-testid="mock-theme"
      >
        <div
          data-testid="mock-multistepmodal"
        >
          <div
            collabdata="[object Object]"
            data-testid="mock-final"
            editdata="[object Object]"
            element="[object Object]"
            locationtext=""
            options="[object Object]"
            title="Create Post"
          >
            <button
              data-testid="mock-final-submit"
            >
              Submit
            </button>
          </div>
          <button
            data-testid="mock-next"
          >
            Next
          </button>
          <button
            data-testid="mock-prev"
          >
            Prev
          </button>
        </div>
      </div>
    </div>
  </body>,
  "container": <div>
    <div
      data-testid="mock-theme"
    >
      <div
        data-testid="mock-multistepmodal"
      >
        <div
          collabdata="[object Object]"
          data-testid="mock-final"
          editdata="[object Object]"
          element="[object Object]"
          locationtext=""
          options="[object Object]"
          title="Create Post"
        >
          <button
            data-testid="mock-final-submit"
          >
            Submit
          </button>
        </div>
        <button
          data-testid="mock-next"
        >
          Next
        </button>
        <button
          data-testid="mock-prev"
        >
          Prev
        </button>
      </div>
    </div>
  </div>,
  "debug": [Function],
  "findAllByAltText": [Function],
  "findAllByDisplayValue": [Function],
  "findAllByLabelText": [Function],
  "findAllByPlaceholderText": [Function],
  "findAllByRole": [Function],
  "findAllByTestId": [Function],
  "findAllByText": [Function],
  "findAllByTitle": [Function],
  "findByAltText": [Function],
  "findByDisplayValue": [Function],
  "findByLabelText": [Function],
  "findByPlaceholderText": [Function],
  "findByRole": [Function],
  "findByTestId": [Function],
  "findByText": [Function],
  "findByTitle": [Function],
  "getAllByAltText": [Function],
  "getAllByDisplayValue": [Function],
  "getAllByLabelText": [Function],
  "getAllByPlaceholderText": [Function],
  "getAllByRole": [Function],
  "getAllByTestId": [Function],
  "getAllByText": [Function],
  "getAllByTitle": [Function],
  "getByAltText": [Function],
  "getByDisplayValue": [Function],
  "getByLabelText": [Function],
  "getByPlaceholderText": [Function],
  "getByRole": [Function],
  "getByTestId": [Function],
  "getByText": [Function],
  "getByTitle": [Function],
  "queryAllByAltText": [Function],
  "queryAllByDisplayValue": [Function],
  "queryAllByLabelText": [Function],
  "queryAllByPlaceholderText": [Function],
  "queryAllByRole": [Function],
  "queryAllByTestId": [Function],
  "queryAllByText": [Function],
  "queryAllByTitle": [Function],
  "queryByAltText": [Function],
  "queryByDisplayValue": [Function],
  "queryByLabelText": [Function],
  "queryByPlaceholderText": [Function],
  "queryByRole": [Function],
  "queryByTestId": [Function],
  "queryByText": [Function],
  "queryByTitle": [Function],
  "rerender": [Function],
  "store": {
    "@@observable": [Function],
    "dispatch": [Function],
    "getState": [Function],
    "replaceReducer": [Function],
    "subscribe": [Function],
  },
  "unmount": [Function],
}
`;

exports[`CreatePostModal renders and matches snapshot at initial step 1`] = `
<div>
  <div
    data-testid="mock-theme"
  >
    <div
      data-testid="mock-multistepmodal"
    >
      <div
        data-testid="mock-selectmedia"
      >
        <button
          data-testid="mock-setfiles"
        >
          Set Files
        </button>
      </div>
      <button
        data-testid="mock-next"
      >
        Next
      </button>
      <button
        data-testid="mock-prev"
      >
        Prev
      </button>
    </div>
  </div>
</div>
`;
